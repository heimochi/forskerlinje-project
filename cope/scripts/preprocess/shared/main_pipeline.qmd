---
title: "Preprocessing Pipeline"
format: html
execute:
echo: true
---

Description: This script sources shared helpers, loads and cleans each questionnaire 
(via `run_pipeline()`), and merges selected instruments into a single 
wide dataset (`merge_instruments()`) using respondent ID and context label.

```{r setup}
source("preprocess/shared/path.r")                  # data_dir
source("preprocess/shared/utilities.r")             # small helpers
source("preprocess/shared/00_consent.R")            # load_consent()
source("preprocess/shared/01_filter.r")             # filter_clinical_data()
source("preprocess/shared/02_data_types.r")         # data_types(), check_types()
source("preprocess/shared/03_merge.r", echo = TRUE, verbose = TRUE)              # merge_instruments()

consent <- load_consent()
qes <- c("ATQ", "BAI", "BDI", "IIP", "MCQ", "PSWQ", "SCL") #regp not a part yet  , "REGT", "REGP"
```

```{r}
run_pipeline <- function(q_name, load_path) {
  source(load_path)
  data <- get(q_name)
  data <- filter_clinical_data(data, consent_df = consent, verbose = FALSE)
  data <- data_types(data)

  print(summary(data))                    # check
  invisible(data)                         # return silently
}
```

```{r}
#------------For testing purposes-------------------
ATQ <- run_pipeline("ATQ", "preprocess/atq.r")
BAI <- run_pipeline("BAI", "preprocess/bai.r")
```

```{r}
# Loop through all
all_data <- lapply(qes, function(q) {
  run_pipeline(q, paste0("preprocess/", tolower(q), ".r"))
})
names(all_data) <- qes
```

```{r}
merged_all <- merge_instruments(list(
  bai  = BAI,
  atq  = ATQ,
  bdi  = BDI,
  iip  = IIP,
  mcq  = MCQ,
  pswq = PSWQ,
  scl  = SCL
  # regp = REGP,
  # regt = REGT
), keys = c("respondent_id", "assessment_context_label", "treatment_id"), verbose = TRUE)

```
