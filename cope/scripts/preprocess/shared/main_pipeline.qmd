---
title: "Preprocessing Pipeline"
format: html
execute:
echo: true
---

```{r setup}
source("preprocess/shared/path.r")                  # data_dir
source("preprocess/shared/utilities.r")             # small helpers
source("preprocess/shared/00_consent.R")            # load_consent()
source("preprocess/shared/01_filter.r")             # filter_clinical_data()
source("preprocess/shared/02_data_types.r")         # data_types(), check_types()
source("preprocess/shared/03_merge.r")              # merge_instruments()

consent <- load_consent()
qes <- c("ATQ", "BAI") #regp not a part yet  , "BDI", "IIP", "MCQ", "PSWQ", "REGT", "SCL"
```

```{r}
run_pipeline <- function(q_name, load_path) {
  source(load_path)
  data <- get(q_name)
  data <- filter_clinical_data(data, consent_df = consent, verbose = FALSE)
  data <- data_types(data)

  print(summary(data))                    # check
  invisible(data)                         # return silently
}
```

```{r}
# check
atq_clean <- run_pipeline("ATQ", "preprocess/atq.r")
bai_clean <- run_pipeline("BAI", "preprocess/bai.r")
```

```{r}
# Loop through all
all_data <- lapply(qes, function(q) {
  run_pipeline(q, paste0("preprocess/", tolower(q), ".r"))
})
names(all_data) <- qes
```

```{r}
# build cleaned list first
all_data <- setNames(
  lapply(qes, function(q)
    run_pipeline(q, paste0("preprocess/", tolower(q), ".r"))),
  qes
)

# pick which instrumentâ€™s meta to prefer (e.g., "SCL" or "BAI").   , prefer_meta = "SCL"
merged_wide <- merge_wide(all_data, verbose = TRUE)

# sanity: one row per key?
merged_wide %>%
  count(respondent_id, assessment_context_label) %>%
  filter(n > 1)

```
